// MERGE SORT



#include <iostream>


using namespace std;


// IMPLEMENTING MERGE SORT




int* merge(int left[],int nL,int right[],int nR,int a[],int n)
{
    int i,j,k;
    i=0;
    j=0;
    k=0;

    while(i<nL&&j<nR)
    {
        if(left[i]<=right[j])
        {
            a[k]=left[i];
            k++;
            i++;
        }
        else
        if(right[j]<left[i])
        {
            a[k]=right[j];
            j++;
            k++;
        }

    }

    while(i<nL)
    {
        a[k] = left[i];
        k++;
        i++;
    }

    while(j<nR)
    {
        a[k] = right[j];
        j++;
        k++;
    }
    return a;
}




int* mergeSort(int a[],int n)
{

    if(n<2)                 // BASE CONDITION
    return a;

    int mid,left[100],right[100],i;

    mid = n/2;

    for(i=0;i<mid;i++)
    {
        left[i] = a[i];
    }

    for(i=mid;i<n;i++)
    {
        right[i-mid] = a[i];
    }

    mergeSort(left,mid);                            //RECURSIVE CALL
    mergeSort(right,(n-mid));

    return merge(left,mid,right,(n-mid),a,n);

}



int main()
{
    int n,a[100],i;
    cout<<"Enter the number of elements in the array :";
    cin>>n;
    cout<<"Enter the elements : "<<endl;

    for(i=0;i<n;i++)
    {
        cin>>a[i];
    }

    int *b = mergeSort(a,n);

    cout<<endl<<"The sorted array :"<<endl;
    for(i=0;i<n;i++)
    {
        cout<<b[i]<<endl;
    }

    return 0;
}


